'''
Given an array arr[] of N non-negative integers representing height of blocks at index i as Ai where the width of each block is 1. Compute how much water can be trapped in between blocks after raining.
Structure is like below:
|  |
|_|
We can trap 2 units of water in the middle gap.
Input:
The first line of input contains an integer T denoting the number of test cases. The description of T test cases follows. Each test case contains an integer N denoting the size of the array, followed by N space separated numbers to be stored in array.

Output:
Output the total unit of water trapped in between the blocks.
'''

t=int(input())
for z in range(t):
    n=int(input())
    l=list(map(int,input().strip().split()))
    lm=[0]*n
    rm=[0]*n
    m,s=0,0
    for i in range(n):
        if(l[i]>=m):
            m=l[i]
        lm[i]=m
    temp=l.copy()
    temp.reverse()
    m=0
    for i in range(n):
        if(temp[i]>=m):
            m=temp[i]
        rm[i]=m
    rm.reverse()    
    for i in range(n):
        s=s+(min(rm[i],lm[i])-l[i])
    print(s)    
        
