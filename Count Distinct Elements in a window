'''
Given an array A[] of size N and an integer K. Your task is to complete the function countDistinct() which prints the count of distinct numbers in all windows of size k in the array A[].

Input:
The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. Each test case contains two integers N and K. Then in the next line are N space separated values of the array A[].

Output:
For each test case in a new line print the space separated values denoting counts of distinct numbers in all windows of size k in the array A[].

Constraints:
1 <= T <= 100
1 <= N <= K <= 105
1 <= A[i] <= 105 , for each valid i

Example(To be used only for expected output):
Input:
2
7 4
1 2 1 3 4 2 3
3 2
4 1 1

Output:
3 4 4 3
2 1
'''
Solution:
from collections import defaultdict
t=int(input())
for z in range(t):
    mp=defaultdict(lambda: 0)
    dist_count=0
    n,k=map(int,input().split())
    arr=list(map(int,input().strip().split()))
    for i in range(k):
        if(mp[arr[i]]==0):
            dist_count+=1
        mp[arr[i]]+=1
    print(dist_count,end=" ")
    for i in range(k,n):
        if(mp[arr[i-k]]==1):
            dist_count-=1
        mp[arr[i-k]]-=1
        if(mp[arr[i]]==0):
            dist_count+=1
        mp[arr[i]]+=1    
        print(dist_count,end=" ")
    print()        
          
